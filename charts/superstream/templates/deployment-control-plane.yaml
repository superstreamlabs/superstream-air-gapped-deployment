apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superstream.fullname" . }}-control-plane
  labels:
    {{- include "superstream.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.superstreamControlPlane.replicaCount }}
  selector:
    matchLabels:
      {{- include "superstream.selectorLabels" . | nindent 6 }}-control-plane
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.superstreamControlPlane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "superstream.labels" . | nindent 8 }}
        {{- include "superstream.selectorLabels" . | nindent 8 }}-control-plane
    spec:
      initContainers:
      - name: check-nats-readiness
        image: {{ .Values.superstreamControlPlane.initContainers.image }}
        imagePullPolicy: IfNotPresent
        env:
          - name: NATS_HOST
            value: nats.{{ include "superstream.namespace" . }}     
        command: 
          - "sh"
          - "-c"
          - |
            until nc -z $NATS_HOST.svc.cluster.local 4222 ; do
              echo waiting for $NATS_HOST
              sleep 2
            done 
      - name: check-postgresql-readiness
        image: {{ .Values.superstreamControlPlane.initContainers.image }}
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRESQL_HOST
            value: postgresql-pgpool.{{ include "superstream.namespace" . }}    
        command: 
          - "sh"
          - "-c"
          - |
            until nc -z $POSTGRESQL_HOST.svc.cluster.local 5432 ; do
              echo waiting for $POSTGRESQL_HOST
              sleep 2
            done
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "superstream.selectorLabels" . | nindent 14 }}-control-plane
      containers:
        - name: {{ .Chart.Name }}-control-plane
          {{ include "superstream.image" (merge (pick $.Values "global") .Values.superstreamControlPlane.image) | nindent 10 }}
          securityContext:
            {{- toYaml .Values.superstreamEngine.securityContext | nindent 12 }}
          ports:
            - containerPort: 8888
              name: http
              protocol: TCP
          env:
            - name: ENV
              value: {{ .Values.superstreamControlPlane.environment }}
            - name: DB_USER
              value: postgres
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: superstream-creds-control-plane
                  key: password
            - name: DB_DBNAME
              value: superstream-database
            - name: DB_HOST
              value: postgresql-pgpool.{{ include "superstream.namespace" . }}.svc
            - name: DB_PORT
              value: "5432"
            - name: DB_MAX_CONNS
              value: "100"
            - name: CH_HOST
              value: {{ .Values.superstreamControlPlane.clickHouse.host }}:{{ if .Values.global.proxy.enabled }}8443{{ else }}9440{{ end }}
            - name: CH_DATABASE
              value: {{ .Values.superstreamControlPlane.clickHouse.dbName }}
            - name: CH_USERNAME
              value: default
            - name: CH_MAX_EXECUTION_TIME
              value: '60'
            - name: CH_DIAL_TIMEOUT
              value: '30'
            - name: CH_DEBUG
              value: 'false'
            - name: CH_MAX_IDLE_CONNS
              value: '10'
            - name: CH_MAX_OPEN_CONNS
              value: '100'
            - name: CH_CONN_MAX_LIFETIME
              value: '300'
            - name: PORT
              value: "8888"
            - name: ON_PREM
              value: {{ .Values.global.onPrem | quote }}
            {{- if .Values.global.proxy.enabled }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.proxy.proxyUrl }}
            {{- end }} 
            - name: SSM_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superstreamControlPlane.secret.name }}
                  key: superstream-admin-password
            - name: ENCRYPTION_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superstreamControlPlane.secret.name }}
                  key: encryption-secret-key
            - name: CONTROL_PLANE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superstreamControlPlane.secret.name }}
                  key: control-plane-token
            - name: NATS_HOST
              value: nats.{{ include "superstream.namespace" . }}
            - name: NATS_PORT
              value: "4222"
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superstreamControlPlane.secret.name }}
                  key: jwt-secret-key
            - name: JWT_API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.superstreamControlPlane.secret.name }}
                  key: jwt-api-secret-key
            - name: SYSLOG
              value: {{ .Values.superstreamEngine.syslog.enabled | quote }}
            - name: SYSLOG_HOST
              value: {{ .Values.superstreamEngine.syslog.remoteSyslog }}.{{ include "superstream.namespace" . }}
            - name: SYSLOG_PROTOCOL
              value: {{ .Values.superstreamEngine.syslog.protocol }}
            - name: SYSLOG_PORT
              value: {{ .Values.superstreamEngine.syslog.port | quote }}
            {{- if .Values.superstreamControlPlane.extraEnv }}
            {{- range .Values.superstreamControlPlane.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}               
          {{- if .Values.nats.config.nats.tls.localCa.enabled }}
          volumeMounts:
            - name: ca-cert-volume
              mountPath: /etc/ssl/certs/ca-certificates.crt
              subPath: ca-certificates.crt
              readOnly: true
            {{- end }} 
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 1
              memory: 2Gi                
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      {{- if .Values.nats.config.nats.tls.localCa.enabled }}        
      volumes:
        - name: ca-cert-volume
          secret:
            secretName: {{ .Values.nats.config.nats.tls.localCa.secretName }}
        {{- end }}            
      dnsPolicy: ClusterFirst
      {{- with .Values.global.image.pullSecretNames }}
      imagePullSecrets:
      {{- range . }}
      - name: {{ . | quote }}
      {{- end }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        {{- toYaml .Values.superstreamEngine.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "superstream.serviceAccountName" . }}
      terminationGracePeriodSeconds: 30
